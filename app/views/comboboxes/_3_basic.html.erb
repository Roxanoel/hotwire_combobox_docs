<%= article do %>
  <%= render layout: "header", locals: { title: "A basic combobox" } do %>
    <div>
      <%= combobox_tag "state", State.all %>
    </div>
  <% end %>

  <%= content do %>
    <%= paragraph do %>
      This is a basic combobox. As plain as can be. Click on it to view all the options.
      Start typing to filter them down. Here's the code for it:
    <% end %>

    <%=
      highlight_erb(%(
        &lt;%= combobox_tag "state", State.all %&gt;
      ))
    %>

    <%= paragraph do %>
      The first param corresponds to the input's name. It's what the query param will
      be called when the form is submitted.

      <%= sp %>
      The second param is the collection of options. It can either be an
      <%= mono("ActiveRecord::Relation") %>, an array of <%= mono("Hash") %> objects,
      or a url/path helper.

      <%= sp %>
      Each option has a <%= mono("value") %> and a <%= mono("display") %>.
      The value is what gets submitted with the form.
      The display is what the user sees in the combobox.

      <%= sp %>
      For an <%= mono("ActiveRecord::Relation") %>, the <%= mono("value") %> is obtained
      by calling <%= mono("#id") %> on each object. And the display is obtained
      by calling <%= mono("#to_combobox_display") %>.

      <%= sp %>
      For an array of <%= mono("Hash") %> objects, you can provide the <%= mono("value") %>
      and <%= mono("display") %> keys yourself.

      <%= sp %>
      Values, displays, and even how autocompletion and filtering work can be customized.
      Read the source code for this kind of advanced usage.

      <%= sp %>
      If you pass an <%= mono("ActiveRecord::Relation") %> or an array of <%= mono("Hash") %>
      objects as options, all items are loaded at once and filtering will be done client-side
      by the library.

      <%= sp %>
      If you pass a url/path helper, options are loaded when the combobox is clicked
      and filtering is done server-side by your app. See the next example for more on that.
    <% end %>
  <% end %>
<% end %>
